{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janje\\\\Documents\\\\GitHub\\\\PAI-Projekt\\\\src\\\\main\\\\frontend\\\\src\\\\pages\\\\BoardDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { fetchBoardDetails, fetchBoardLists, fetchCards, createList, createCard, updateList, deleteList, updateCard, deleteCard } from '../services/api';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BoardDetail = () => {\n  _s();\n  const {\n    boardId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    currentUser\n  } = useAuth();\n  const [board, setBoard] = useState(null);\n  const [lists, setLists] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // State for creating new list\n  const [showAddList, setShowAddList] = useState(false);\n  const [newListName, setNewListName] = useState('');\n\n  // State for editing list\n  const [editingListId, setEditingListId] = useState(null);\n  const [editListName, setEditListName] = useState('');\n\n  // State for creating new card\n  const [addingCardToListId, setAddingCardToListId] = useState(null);\n  const [newCardTitle, setNewCardTitle] = useState('');\n  const [newCardDescription, setNewCardDescription] = useState('');\n  useEffect(() => {\n    // Redirect if not logged in\n    if (!currentUser) {\n      navigate('/login');\n      return;\n    }\n    if (!boardId) {\n      navigate('/boards');\n      return;\n    }\n    loadBoardData();\n  }, [boardId, currentUser, navigate]);\n  const loadBoardData = async () => {\n    try {\n      setLoading(true);\n\n      // Fetch board details\n      const boardData = await fetchBoardDetails(boardId);\n      setBoard(boardData);\n\n      // Fetch lists for this board\n      const listsData = await fetchBoardLists(boardId);\n\n      // For each list, fetch its cards\n      const listsWithCards = await Promise.all(listsData.map(async list => {\n        const cards = await fetchCards(boardId, list.id);\n        return {\n          ...list,\n          cards\n        };\n      }));\n      setLists(listsWithCards);\n      setError('');\n    } catch (err) {\n      console.error('Error loading board data:', err);\n      setError('Failed to load board data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddList = async e => {\n    e.preventDefault();\n    if (!newListName.trim()) {\n      setError('List name cannot be empty');\n      return;\n    }\n    try {\n      const newList = await createList(boardId, {\n        name: newListName\n      });\n      setLists([...lists, {\n        ...newList,\n        cards: []\n      }]);\n      setNewListName('');\n      setShowAddList(false);\n      setError('');\n    } catch (err) {\n      console.error('Error creating list:', err);\n      setError('Failed to create list. Please try again.');\n    }\n  };\n  const handleEditList = async listId => {\n    const list = lists.find(l => l.id === listId);\n    if (list) {\n      setEditingListId(listId);\n      setEditListName(list.name);\n    }\n  };\n  const handleUpdateList = async (e, listId) => {\n    e.preventDefault();\n    if (!editListName.trim()) {\n      setError('List name cannot be empty');\n      return;\n    }\n    try {\n      const updatedList = await updateList(boardId, listId, {\n        name: editListName\n      });\n      setLists(lists.map(list => list.id === listId ? {\n        ...list,\n        name: updatedList.name\n      } : list));\n      setEditingListId(null);\n      setEditListName('');\n      setError('');\n    } catch (err) {\n      console.error('Error updating list:', err);\n      setError('Failed to update list. Please try again.');\n    }\n  };\n  const handleDeleteList = async listId => {\n    if (!window.confirm('Are you sure you want to delete this list? This action cannot be undone.')) {\n      return;\n    }\n    try {\n      await deleteList(boardId, listId);\n      setLists(lists.filter(list => list.id !== listId));\n    } catch (err) {\n      console.error('Error deleting list:', err);\n      setError('Failed to delete list. Please try again.');\n    }\n  };\n  const handleAddCard = async (e, listId) => {\n    e.preventDefault();\n    if (!newCardTitle.trim()) {\n      setError('Card title cannot be empty');\n      return;\n    }\n    try {\n      const newCard = await createCard(boardId, listId, {\n        title: newCardTitle,\n        description: newCardDescription\n      });\n      setLists(lists.map(list => list.id === listId ? {\n        ...list,\n        cards: [...list.cards, newCard]\n      } : list));\n      setNewCardTitle('');\n      setNewCardDescription('');\n      setAddingCardToListId(null);\n      setError('');\n    } catch (err) {\n      console.error('Error creating card:', err);\n      setError('Failed to create card. Please try again.');\n    }\n  };\n  const handleCardClick = (listId, cardId) => {\n    // Navigate to card detail or open modal\n    console.log(`Card clicked: ${cardId} in list ${listId}`);\n    // For now, we'll just log this. In a real app, you might open a modal or navigate to a card detail page\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 12\n    }, this);\n  }\n  if (!board) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Board not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/boards'),\n        children: \"Back to Boards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: board.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAddList(!showAddList),\n          children: showAddList ? 'Cancel' : 'Add List'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }, this), showAddList && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddList,\n      className: \"create-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"list-name\",\n          children: \"List Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"list-name\",\n          value: newListName,\n          onChange: e => setNewListName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lists-container\",\n      children: lists.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-header\",\n          children: editingListId === list.id ? /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => handleUpdateList(e, list.id),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editListName,\n              onChange: e => setEditListName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setEditingListId(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: list.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-header-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-list-btn\",\n                onClick: () => handleEditList(list.id),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-list-btn danger-btn\",\n                onClick: () => handleDeleteList(list.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards-container\",\n          children: list.cards && list.cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            onClick: () => handleCardClick(list.id, card.id),\n            children: [card.labels && card.labels.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-labels\",\n              children: card.labels.map(label => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-label\",\n                style: {\n                  backgroundColor: label.color\n                },\n                title: label.name\n              }, label.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: card.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this), card.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: card.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 40\n            }, this), card.dueDate && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-dates\",\n              children: [\"Due: \", new Date(card.dueDate).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 21\n            }, this), card.tasks && card.tasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-tasks\",\n              children: [card.tasks.filter(task => task.completed).length, \"/\", card.tasks.length, \" tasks\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 21\n            }, this)]\n          }, card.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), addingCardToListId === list.id ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleAddCard(e, list.id),\n          className: \"add-card-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `card-title-${list.id}`,\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: `card-title-${list.id}`,\n              value: newCardTitle,\n              onChange: e => setNewCardTitle(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `card-description-${list.id}`,\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: `card-description-${list.id}`,\n              value: newCardDescription,\n              onChange: e => setNewCardDescription(e.target.value),\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setAddingCardToListId(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-card-btn\",\n          onClick: () => setAddingCardToListId(list.id),\n          children: \"+ Add Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 15\n        }, this)]\n      }, list.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardDetail, \"Q1akExl7OcSGQKp+Dm60xIRc+w0=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = BoardDetail;\nexport default BoardDetail;\nvar _c;\n$RefreshReg$(_c, \"BoardDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","fetchBoardDetails","fetchBoardLists","fetchCards","createList","createCard","updateList","deleteList","updateCard","deleteCard","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","BoardDetail","_s","boardId","navigate","currentUser","board","setBoard","lists","setLists","loading","setLoading","error","setError","showAddList","setShowAddList","newListName","setNewListName","editingListId","setEditingListId","editListName","setEditListName","addingCardToListId","setAddingCardToListId","newCardTitle","setNewCardTitle","newCardDescription","setNewCardDescription","loadBoardData","boardData","listsData","listsWithCards","Promise","all","map","list","cards","id","err","console","handleAddList","e","preventDefault","trim","newList","name","handleEditList","listId","find","l","handleUpdateList","updatedList","handleDeleteList","window","confirm","filter","handleAddCard","newCard","title","description","handleCardClick","cardId","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","value","onChange","target","required","card","labels","length","label","style","backgroundColor","color","dueDate","Date","toLocaleDateString","tasks","task","completed","rows","_c","$RefreshReg$"],"sources":["C:/Users/janje/Documents/GitHub/PAI-Projekt/src/main/frontend/src/pages/BoardDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { \r\n  fetchBoardDetails, \r\n  fetchBoardLists, \r\n  fetchCards, \r\n  createList, \r\n  createCard, \r\n  updateList, \r\n  deleteList, \r\n  updateCard, \r\n  deleteCard \r\n} from '../services/api';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst BoardDetail = () => {\r\n  const { boardId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { currentUser } = useAuth();\r\n  \r\n  const [board, setBoard] = useState(null);\r\n  const [lists, setLists] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  \r\n  // State for creating new list\r\n  const [showAddList, setShowAddList] = useState(false);\r\n  const [newListName, setNewListName] = useState('');\r\n  \r\n  // State for editing list\r\n  const [editingListId, setEditingListId] = useState(null);\r\n  const [editListName, setEditListName] = useState('');\r\n  \r\n  // State for creating new card\r\n  const [addingCardToListId, setAddingCardToListId] = useState(null);\r\n  const [newCardTitle, setNewCardTitle] = useState('');\r\n  const [newCardDescription, setNewCardDescription] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Redirect if not logged in\r\n    if (!currentUser) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    \r\n    if (!boardId) {\r\n      navigate('/boards');\r\n      return;\r\n    }\r\n    \r\n    loadBoardData();\r\n  }, [boardId, currentUser, navigate]);\r\n\r\n  const loadBoardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Fetch board details\r\n      const boardData = await fetchBoardDetails(boardId);\r\n      setBoard(boardData);\r\n      \r\n      // Fetch lists for this board\r\n      const listsData = await fetchBoardLists(boardId);\r\n      \r\n      // For each list, fetch its cards\r\n      const listsWithCards = await Promise.all(\r\n        listsData.map(async (list) => {\r\n          const cards = await fetchCards(boardId, list.id);\r\n          return { ...list, cards };\r\n        })\r\n      );\r\n      \r\n      setLists(listsWithCards);\r\n      setError('');\r\n    } catch (err) {\r\n      console.error('Error loading board data:', err);\r\n      setError('Failed to load board data. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddList = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newListName.trim()) {\r\n      setError('List name cannot be empty');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const newList = await createList(boardId, { name: newListName });\r\n      setLists([...lists, { ...newList, cards: [] }]);\r\n      setNewListName('');\r\n      setShowAddList(false);\r\n      setError('');\r\n    } catch (err) {\r\n      console.error('Error creating list:', err);\r\n      setError('Failed to create list. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEditList = async (listId) => {\r\n    const list = lists.find(l => l.id === listId);\r\n    if (list) {\r\n      setEditingListId(listId);\r\n      setEditListName(list.name);\r\n    }\r\n  };\r\n\r\n  const handleUpdateList = async (e, listId) => {\r\n    e.preventDefault();\r\n    \r\n    if (!editListName.trim()) {\r\n      setError('List name cannot be empty');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const updatedList = await updateList(boardId, listId, { name: editListName });\r\n      setLists(lists.map(list => \r\n        list.id === listId ? { ...list, name: updatedList.name } : list\r\n      ));\r\n      setEditingListId(null);\r\n      setEditListName('');\r\n      setError('');\r\n    } catch (err) {\r\n      console.error('Error updating list:', err);\r\n      setError('Failed to update list. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteList = async (listId) => {\r\n    if (!window.confirm('Are you sure you want to delete this list? This action cannot be undone.')) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      await deleteList(boardId, listId);\r\n      setLists(lists.filter(list => list.id !== listId));\r\n    } catch (err) {\r\n      console.error('Error deleting list:', err);\r\n      setError('Failed to delete list. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleAddCard = async (e, listId) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newCardTitle.trim()) {\r\n      setError('Card title cannot be empty');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const newCard = await createCard(boardId, listId, { \r\n        title: newCardTitle,\r\n        description: newCardDescription \r\n      });\r\n      \r\n      setLists(lists.map(list => \r\n        list.id === listId \r\n          ? { ...list, cards: [...list.cards, newCard] } \r\n          : list\r\n      ));\r\n      \r\n      setNewCardTitle('');\r\n      setNewCardDescription('');\r\n      setAddingCardToListId(null);\r\n      setError('');\r\n    } catch (err) {\r\n      console.error('Error creating card:', err);\r\n      setError('Failed to create card. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleCardClick = (listId, cardId) => {\r\n    // Navigate to card detail or open modal\r\n    console.log(`Card clicked: ${cardId} in list ${listId}`);\r\n    // For now, we'll just log this. In a real app, you might open a modal or navigate to a card detail page\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"section\">Loading...</div>;\r\n  }\r\n\r\n  if (!board) {\r\n    return (\r\n      <div className=\"section\">\r\n        <h2>Board not found</h2>\r\n        <button onClick={() => navigate('/boards')}>Back to Boards</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      <div className=\"board-header\">\r\n        <h2>{board.name}</h2>\r\n        <div className=\"board-actions\">\r\n          <button onClick={() => setShowAddList(!showAddList)}>\r\n            {showAddList ? 'Cancel' : 'Add List'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      \r\n      {showAddList && (\r\n        <form onSubmit={handleAddList} className=\"create-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"list-name\">List Name</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"list-name\" \r\n              value={newListName}\r\n              onChange={(e) => setNewListName(e.target.value)}\r\n              required \r\n            />\r\n          </div>\r\n          <button type=\"submit\">Create List</button>\r\n        </form>\r\n      )}\r\n      \r\n      <div className=\"lists-container\">\r\n        {lists.map(list => (\r\n          <div key={list.id} className=\"list-column\">\r\n            <div className=\"list-header\">\r\n              {editingListId === list.id ? (\r\n                <form onSubmit={(e) => handleUpdateList(e, list.id)}>\r\n                  <input \r\n                    type=\"text\" \r\n                    value={editListName}\r\n                    onChange={(e) => setEditListName(e.target.value)}\r\n                    required \r\n                  />\r\n                  <button type=\"submit\">Save</button>\r\n                  <button type=\"button\" onClick={() => setEditingListId(null)}>Cancel</button>\r\n                </form>\r\n              ) : (\r\n                <>\r\n                  <h3>{list.name}</h3>\r\n                  <div className=\"list-header-actions\">\r\n                    <button \r\n                      className=\"edit-list-btn\" \r\n                      onClick={() => handleEditList(list.id)}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button \r\n                      className=\"delete-list-btn danger-btn\" \r\n                      onClick={() => handleDeleteList(list.id)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"cards-container\">\r\n              {list.cards && list.cards.map(card => (\r\n                <div \r\n                  key={card.id} \r\n                  className=\"card\" \r\n                  onClick={() => handleCardClick(list.id, card.id)}\r\n                >\r\n                  {card.labels && card.labels.length > 0 && (\r\n                    <div className=\"card-labels\">\r\n                      {card.labels.map(label => (\r\n                        <div \r\n                          key={label.id} \r\n                          className=\"card-label\" \r\n                          style={{ backgroundColor: label.color }} \r\n                          title={label.name}\r\n                        ></div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  <h4>{card.title}</h4>\r\n                  {card.description && <p>{card.description}</p>}\r\n                  \r\n                  {card.dueDate && (\r\n                    <div className=\"card-dates\">\r\n                      Due: {new Date(card.dueDate).toLocaleDateString()}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {card.tasks && card.tasks.length > 0 && (\r\n                    <div className=\"card-tasks\">\r\n                      {card.tasks.filter(task => task.completed).length}/{card.tasks.length} tasks\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n            {addingCardToListId === list.id ? (\r\n              <form onSubmit={(e) => handleAddCard(e, list.id)} className=\"add-card-form\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor={`card-title-${list.id}`}>Title</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    id={`card-title-${list.id}`} \r\n                    value={newCardTitle}\r\n                    onChange={(e) => setNewCardTitle(e.target.value)}\r\n                    required \r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor={`card-description-${list.id}`}>Description</label>\r\n                  <textarea \r\n                    id={`card-description-${list.id}`} \r\n                    value={newCardDescription}\r\n                    onChange={(e) => setNewCardDescription(e.target.value)}\r\n                    rows=\"3\"\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"form-actions\">\r\n                  <button type=\"submit\">Add Card</button>\r\n                  <button \r\n                    type=\"button\" \r\n                    onClick={() => setAddingCardToListId(null)}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            ) : (\r\n              <button \r\n                className=\"add-card-btn\" \r\n                onClick={() => setAddingCardToListId(list.id)}\r\n              >\r\n                + Add Card\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BoardDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}