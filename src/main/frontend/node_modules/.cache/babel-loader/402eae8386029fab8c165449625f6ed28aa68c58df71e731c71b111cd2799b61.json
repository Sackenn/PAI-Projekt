{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janje\\\\Documents\\\\GitHub\\\\PAI-Projekt\\\\src\\\\main\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on component mount\n    const userId = localStorage.getItem('userId');\n    if (userId) {\n      fetchUserProfile(userId);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchUserProfile = async userId => {\n    try {\n      const response = await axios.get(`/api/user/profile/${userId}`);\n      setCurrentUser(response.data);\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/api/auth/signin', {\n        username,\n        password\n      });\n      const {\n        id\n      } = response.data;\n      localStorage.setItem('userId', id);\n      await fetchUserProfile(id);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to login. Please check your credentials.'\n      };\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const response = await axios.post('/api/auth/signup', {\n        username,\n        email,\n        password\n      });\n      return {\n        success: true,\n        message: response.data.message\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to register. Please try again.'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('userId');\n    setCurrentUser(null);\n  };\n  const updateProfile = async (type, data) => {\n    try {\n      const userId = localStorage.getItem('userId');\n      if (!userId) throw new Error('User not logged in');\n      let endpoint;\n      let payload;\n      switch (type) {\n        case 'username':\n          endpoint = `/api/user/profile/${userId}/username`;\n          payload = {\n            username: data\n          };\n          break;\n        case 'email':\n          endpoint = `/api/user/profile/${userId}/email`;\n          payload = {\n            email: data\n          };\n          break;\n        case 'password':\n          endpoint = `/api/user/profile/${userId}/password`;\n          payload = {\n            currentPassword: data.currentPassword,\n            password: data.newPassword\n          };\n          break;\n        default:\n          throw new Error('Invalid update type');\n      }\n      const response = await axios.put(endpoint, payload);\n\n      // Update current user if username or email was changed\n      if (type === 'username' || type === 'email') {\n        await fetchUserProfile(userId);\n      }\n      return {\n        success: true,\n        message: response.data.message\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(`Error updating ${type}:`, error);\n      return {\n        success: false,\n        message: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || `Failed to update ${type}. Please try again.`\n      };\n    }\n  };\n  const value = {\n    currentUser,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","userId","localStorage","getItem","fetchUserProfile","response","get","data","error","console","logout","login","username","password","post","id","setItem","success","_error$response","_error$response$data","message","register","email","_error$response2","_error$response2$data","removeItem","updateProfile","type","Error","endpoint","payload","currentPassword","newPassword","put","_error$response3","_error$response3$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/janje/Documents/GitHub/PAI-Projekt/src/main/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on component mount\r\n    const userId = localStorage.getItem('userId');\r\n    if (userId) {\r\n      fetchUserProfile(userId);\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const fetchUserProfile = async (userId) => {\r\n    try {\r\n      const response = await axios.get(`/api/user/profile/${userId}`);\r\n      setCurrentUser(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching user profile:', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/signin', { username, password });\r\n      const { id } = response.data;\r\n      localStorage.setItem('userId', id);\r\n      await fetchUserProfile(id);\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || 'Failed to login. Please check your credentials.'\r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/signup', { username, email, password });\r\n      return { success: true, message: response.data.message };\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || 'Failed to register. Please try again.'\r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('userId');\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  const updateProfile = async (type, data) => {\r\n    try {\r\n      const userId = localStorage.getItem('userId');\r\n      if (!userId) throw new Error('User not logged in');\r\n\r\n      let endpoint;\r\n      let payload;\r\n\r\n      switch (type) {\r\n        case 'username':\r\n          endpoint = `/api/user/profile/${userId}/username`;\r\n          payload = { username: data };\r\n          break;\r\n        case 'email':\r\n          endpoint = `/api/user/profile/${userId}/email`;\r\n          payload = { email: data };\r\n          break;\r\n        case 'password':\r\n          endpoint = `/api/user/profile/${userId}/password`;\r\n          payload = { currentPassword: data.currentPassword, password: data.newPassword };\r\n          break;\r\n        default:\r\n          throw new Error('Invalid update type');\r\n      }\r\n\r\n      const response = await axios.put(endpoint, payload);\r\n      \r\n      // Update current user if username or email was changed\r\n      if (type === 'username' || type === 'email') {\r\n        await fetchUserProfile(userId);\r\n      }\r\n      \r\n      return { success: true, message: response.data.message };\r\n    } catch (error) {\r\n      console.error(`Error updating ${type}:`, error);\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || `Failed to update ${type}. Please try again.`\r\n      };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}